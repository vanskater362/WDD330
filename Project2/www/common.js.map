{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/login/register/register.page.html","./src/app/login/register/register-routing.module.ts","./src/app/login/register/register.module.ts","./src/app/login/register/register.page.scss","./src/app/login/register/register.page.ts","./src/app/services/authentication-service.service.ts","./src/app/services/miles.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAe,45HAA61H,E;;;;;;;;;;;;;;;;;;;ACAn0H;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAMF,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;AAW/C,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAA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","file":"common.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-content color=\\\"primary\\\">\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" class=\\\"register-form\\\">\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\n        <!--<img src=\\\"assets/img/nsg-logo.png\\\">-->\\n        <h1>Orignizd Logo Here</h1>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid *ngIf=\\\"accountSuccess\\\">\\n      <ion-row>\\n        <ion-col>\\n          <p>Account activated </p>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"10\\\" offset=\\\"1\\\">\\n          <ion-button \\n            routerLink=\\\"/login\\\" \\n            expand=\\\"full\\\" \\n            color=\\\"secondary\\\"\\n          >\\n          Login\\n        </ion-button>\\n        </ion-col>\\n      </ion-row>  \\n    </ion-grid> \\n\\n    <ion-grid *ngIf=\\\"!accountSuccess\\\">\\n      <ion-row>\\n        <ion-col size=\\\"10\\\" offset=\\\"1\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">First Name</ion-label>\\n            <ion-input \\n              type=\\\"text\\\"\\n              name=\\\"firstName\\\" \\n              ngModel \\n              required \\n              #firstNameCtrl=\\\"ngModel\\\"\\n            ></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!firstNameCtrl.valid && firstNameCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label class=\\\"error-danger\\\">First Name required.</ion-label>\\n          </ion-item>\\n        </ion-col>  \\n        <ion-col size=\\\"10\\\" offset=\\\"1\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n            <ion-input \\n              type=\\\"text\\\"\\n              name=\\\"lastName\\\" \\n              ngModel \\n              required \\n              #lastNameCtrl=\\\"ngModel\\\"\\n            >\\n            </ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!lastNameCtrl.valid && lastNameCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label class=\\\"error-danger\\\">Last Name required.</ion-label>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"10\\\" offset=\\\"1\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\n            <ion-input \\n              type=\\\"text\\\"\\n              name=\\\"email\\\" \\n              ngModel \\n              required \\n              email\\n              #emailCtrl=\\\"ngModel\\\"\\n            >\\n            </ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label class=\\\"error-danger\\\">Should be a valid email address.</ion-label>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"10\\\" offset=\\\"1\\\">\\n          <ion-item class=\\\"margin-top-5\\\">\\n            <ion-label position=\\\"floating\\\">Password</ion-label>\\n            <ion-input \\n              type=\\\"password\\\" \\n              name=\\\"password\\\"\\n              ngModel \\n              required\\n              #passwordCtrl=\\\"ngModel\\\"\\n            ></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label class=\\\"error-danger\\\">Should be 6 characters long.</ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"10\\\" offset=\\\"1\\\">\\n          <ion-button \\n            type=\\\"submit\\\" \\n            [disabled]=\\\"!f.valid\\\" \\n            expand=\\\"full\\\" \\n            color=\\\"secondary\\\"\\n          >\\n          Activate Account\\n        </ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"10\\\" offset=\\\"1\\\">\\n          <ion-button \\n            routerLink=\\\"/login\\\" \\n            expand=\\\"full\\\" \\n            color=\\\"secondary\\\"\\n          >\\n          Login\\n        </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>  \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".register-form {\\n  top: 50%;\\n  left: 50%;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  transform: translate(-50%, -50%);\\n}\\n.register-form .secondary-item-text {\\n  color: var(--ion-color-primary-contrast);\\n}\\n.register-form .error-danger {\\n  color: var(--ion-color-danger);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vcmVnaXN0ZXIvRDpcXE9uZSBEcml2ZVxcT25lRHJpdmUgLSBCWVUtSWRhaG9cXFNjaG9vbFxcV0REIDMzMFxcV0REMzMwXFxQcm9qZWN0Mi9zcmNcXGFwcFxcbG9naW5cXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiLCJzcmMvYXBwL2xvZ2luL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNHLFFBQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxnQ0FBQTtBQ0NIO0FEQ0c7RUFDSSx3Q0FBQTtBQ0NQO0FEQ0c7RUFDSSw4QkFBQTtBQ0NQIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlZ2lzdGVyLWZvcm17XHJcbiAgIHRvcDogNTAlO1xyXG4gICBsZWZ0OiA1MCU7XHJcbiAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICB3aWR0aDogMTAwJTtcclxuICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgIFxyXG4gICAuc2Vjb25kYXJ5LWl0ZW0tdGV4dHtcclxuICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdCk7XHJcbiAgIH1cclxuICAgLmVycm9yLWRhbmdlcntcclxuICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcclxuICAgfVxyXG59IiwiLnJlZ2lzdGVyLWZvcm0ge1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuLnJlZ2lzdGVyLWZvcm0gLnNlY29uZGFyeS1pdGVtLXRleHQge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnktY29udHJhc3QpO1xufVxuLnJlZ2lzdGVyLWZvcm0gLmVycm9yLWRhbmdlciB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcbn0iXX0= */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Register } from 'src/app/models/register';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication-service.service';\nimport { AlertController, LoadingController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit, OnDestroy {\n  isLoading = false;\n  accountSuccess = false;\n  registerData: Register = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  };\n  registerSub: Subscription;\n\n  constructor( \n    private authService: AuthenticationService,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController\n  ) { \n    this.accountSuccess = false;\n  }\n\n  ngOnInit() {\n    this.accountSuccess = false;\n  }\n\n  ngOnDestroy() {\n    if(this.registerSub) {\n      this.registerSub.unsubscribe();\n    }\n    this.accountSuccess = false;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    if(this.registerSub) {\n      this.registerSub.unsubscribe();\n    }\n    this.registerData.firstName = form.value.firstName;\n    this.registerData.lastName = form.value.lastName;\n    this.registerData.email = form.value.email;\n    this.registerData.password = form.value.password;\n\n    this.loadingCtrl\n      .create({ keyboardClose: true, message: 'Activating account...' })\n      .then(loadingEl => {\n        loadingEl.present();\n        this.registerSub = this.authService.register(this.registerData).subscribe(\n          resData => {\n            loadingEl.dismiss();\n            this.accountSuccess = true;\n            form.reset();\n          },\n          errRes => {\n            loadingEl.dismiss();\n            const message = errRes.error.message;\n            this.showAlert(message);\n          }\n        );\n      });\n  }\n\n  private showAlert(message: string) {\n    this.alertCtrl\n      .create({\n        header: 'Activation failed',\n        message,\n        buttons: ['Okay']\n      })\n      .then(alertEl => alertEl.present());\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, Observable, from } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nimport { User } from '../models/user';\nimport { Register } from '../models/register';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n  headers = new HttpHeaders()\n          .set('Content-Type', 'application/json');\n          //.set('Access-Control-Allow-Origin', '*');\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(\n      JSON.parse(localStorage.getItem('currentUser'))\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post<User>(`${environment.apiUrl}/auth/login`, { email, password },{headers: this.headers})\n      .pipe(\n        map(user => {\n          localStorage.setItem('currentUser', JSON.stringify(user));\n          this.currentUserSubject.next(user);\n          return user;\n        })\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n  updateUser(input: any) {\n    localStorage.setItem('currentUser', JSON.stringify(input));\n    this.currentUserSubject.next(input);\n  }\n\n  register( input: Register) {\n    return this.http\n      .post<boolean>(environment.apiUrl + '/auth/registerUser', input,{headers: this.headers})\n      .pipe(share());\n  }\n\n  changePassword( curPasssword: string, password: string, userId: number ) {\n    return this.http\n      .post<boolean>(environment.apiUrl + '/auth/changePassword', {curPasssword, password, userId})\n      .pipe(share());\n  }\n\n  resetPassword(email: string) {\n    return this.http\n      .post<boolean>(environment.apiUrl + '/auth/resetPassword', {email})\n      .pipe(share());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, Observable, from } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\n\nimport { Trip } from '../models/trip.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MilesService {\n  /*private tripListSubject: BehaviorSubject<Array<Trip>>;\n  currentTrips: Observable<Array<Trip>>;*/\n  public tripList = [];\n  public tripListSubject = new BehaviorSubject<Array<Trip>>(this.tripList);\n  public currentTrips = this.tripListSubject.asObservable();\n\n  headers = new HttpHeaders()\n          .set('Content-Type', 'application/json');\n          //.set('Access-Control-Allow-Origin', '*');\n\n  constructor(private http: HttpClient) {\n    \n  }\n\n  public get currentTripsValue(): Array<Trip> {\n    return this.tripListSubject.value;\n  }\n   \n\n  subMiles( input: Trip) {\n    return this.http\n      .post<boolean>(environment.apiUrl + '/miles/submit', input,{headers: this.headers})\n      .pipe(share());\n  }\n  \n  getTrips( userId: string, date: string){\n    const params = new HttpParams()\n    .set('userId', userId)\n    .set('date', date);\n\n    return this.http\n      .get<Array<Trip>>(environment.apiUrl + '/miles/get', {params: params})\n      .pipe(share());\n  }\n}\n"],"sourceRoot":"webpack:///"}